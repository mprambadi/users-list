{"version":3,"sources":["api.js","component/Loader.js","component/Tab.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","process","localStorage","getItem","defaults","headers","common","Loader","props","react_default","a","createElement","react_content_loader_es","Object","assign","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","cx","cy","r","IconTabs","classes","this","Paper_default","square","className","root","Tabs_default","value","onChange","handleChange","fullWidth","indicatorColor","textColor","Tab_default","icon","Phone_default","Favorite_default","PersonPin_default","children","React","Component","withStyles","flexGrow","maxWidth","App","state","users","loading","filter","loadingMore","morePage","file","onScroll","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","_this","fetchMoreUser","fetchUser","setState","get","then","_ref","data","results","_callee","_ref3","regenerator_default","wrap","_context","prev","next","sent","toConsumableArray","concat","length","stop","event","console","log","renderItem","renderList","user","name","title","firstname","lastname","email","join","indexOf","_ref4","_ref4$target","target","defineProperty","map","id","component_Loader","key","src","picture","thumbnail","alt","first","last","component_Tab","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5789be00.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_BASE_URL\n})\n\nif(localStorage.getItem('token')) {\n    api.defaults.headers.common['authorization'] = 'token'\n}\n\n\nexport default api","import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\nconst Loader = (props) => (\n\t<ContentLoader \n\t\theight={90}\n\t\twidth={400}\n\t\tspeed={2}\n\t\tprimaryColor=\"#000\"\n\t\tsecondaryColor=\"#ecebeb\"\n        {...props}\n\t>\n\t\t<rect x=\"65\" y=\"19\" rx=\"3\" ry=\"3\" width=\"70\" height=\"10\" /> \n\t\t<rect x=\"155\" y=\"20\" rx=\"3\" ry=\"3\" width=\"130\" height=\"10\" /> \n\t\t<rect x=\"74\" y=\"42\" rx=\"3\" ry=\"3\" width=\"90\" height=\"10\" /> \n\t\t<rect x=\"190\" y=\"40\" rx=\"3\" ry=\"3\" width=\"60\" height=\"10\" /> \n\t\t<circle cx=\"34.55\" cy=\"34.22\" r=\"24.55\" />\n\t</ContentLoader>\n)\n\nexport default Loader\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    maxWidth: 500,\n  },\n};\n\nclass IconTabs extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Paper square className={classes.root}>\n        <Tabs\n          value={this.props.value}\n          onChange={this.props.handleChange}\n          fullWidth\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          <Tab icon={<PhoneIcon />} />\n          <Tab icon={<FavoriteIcon />} />\n          <Tab icon={<PersonPinIcon />} />\n        </Tabs>\n\n        {this.props.children}\n      </Paper>\n    );\n  }\n}\n\nIconTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(styles)(IconTabs)","import React, { Component } from \"react\";\nimport api from \"./api\";\nimport Loader from \"./component/Loader\";\nimport IconTabs from \"./component/Tab\";\n\nclass App extends Component {\n  state = {\n    users: [],\n    loading: false,\n    filter: \"\",\n    loadingMore: false,\n    morePage: true,\n    file: \"\",\n    value: 0\n  };\n  componentDidMount() {\n    this.fetchUser();\n    this.onScroll();\n  }\n\n  onScroll = () => {\n    window.onscroll = () => {\n      if (\n        window.innerHeight + document.documentElement.scrollTop ===\n        document.documentElement.offsetHeight\n      ) {\n        if (!this.state.morePage) return;\n        this.fetchMoreUser();\n      }\n    };\n  };\n\n  fetchUser = () => {\n    this.setState({ loading: true }, () =>\n      api.get(`/?nat=us&results=12`).then(({ data }) => {\n        this.setState({ loading: false, users: data.results });\n      })\n    );\n  };\n\n  fetchMoreUser = async () => {\n    this.setState({ loadingMore: true });\n\n    const { data } = await api.get(\"/?nat=us&results=10\");\n\n    this.setState(state => ({\n      users: [...state.users, ...data.results],\n      loadingMore: false,\n      morePage: state.users.length < 100\n    }));\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n\n    console.log(value);\n  };\n\n  renderItem = () => {\n    if (this.state.value === 0) {\n      return this.renderList();\n    }\n    if (this.state.value === 1) {\n      return <div>halaman 0</div>;\n    }\n    if (this.state.value === 2) {\n      return <div>halaman 2</div>;\n    }\n  };\n\n  renderList = () => {\n    const filter = this.state.users.filter(\n      user =>\n        [user.name.title, user.name.firstname, user.name.lastname, user.email]\n          .join(\" \")\n          .indexOf(this.state.filter) !== -1\n    );\n\n    return (\n      <div>\n        <input\n          name=\"filter\"\n          onChange={({ target: { name, value } }) =>\n            this.setState({ [name]: value })\n          }\n          className=\"form-control mb-2\"\n        />\n        {this.state.loading ? (\n          <div>\n            {[1, 2, 3, 4, 5, 6, 7, 9, 10].map(id => (\n              <Loader key={id} className=\"m-1\" />\n            ))}\n          </div>\n        ) : (\n          filter.map(user => (\n            <div className=\"d-flex m-2\" key={user.id.value}>\n              <div>\n                <img\n                  src={user.picture.thumbnail}\n                  alt={user.name.first}\n                  className=\"rounded-circle mr-2\"\n                />\n              </div>\n              <div>{`${user.name.title} ${user.name.first} ${\n                user.name.last\n              }`}</div>\n            </div>\n          ))\n        )}\n\n        {this.state.loadingMore && <Loader />}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"w-50\">\n          <IconTabs handleChange={this.handleChange} value={this.state.value}>\n            {this.renderItem()}\n          </IconTabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}